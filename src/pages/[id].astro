---
import ColoresItem from "../components/ColoresItem.astro";
import products from "../data/products.json";
import Layout from "../layouts/Layout.astro";
import ShoppingCart from "../icons/ShoppingCart.astro";
import StarIcon from "../icons/Star.astro";
import Breadcrumb from "../components/Breadcrumb.astro";

// Función getStaticPaths para generar rutas estáticas de productos
export async function getStaticPaths() {
  return products.map((product) => ({
    params: { id: product.id },
  }));
}

const { id } = Astro.params;
const product = products.find((p) => p.id === id);

if (!product) {
  throw new Error("Producto no encontrado");
}

// Control de imagen principal
let selectedImage = product.image[0];
function handleImageClick(image) {
  selectedImage = image;
}

const links = [
  { label: "Inicio", url: "/" },
  {
    label: product.category.charAt(0).toUpperCase() + product.category.slice(1),
    url: `/${product.category.toLowerCase()}`,
  },
  { label: product.name, url: null },
];
---

<style>
  .zoom-container {
    overflow: hidden;
    position: relative;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
  }

  .zoom-container img {
    transition: transform 0.3s ease;
    cursor: zoom-in;
  }

  .zoom-container:hover img {
    transform: scale(1.2);
  }
</style>

<!-- <Layout
  title={`Veva Underwear - ${product.name} - Lencería Femenina`}
  description={`${product.name}`}
>
 <div class="container mx-auto p-4">
  <h1 class="text-2xl font-bold mb-4">{product.name}</h1>
  <p class="text-gray-700 mb-4">{product.description}</p>
  <p class="text-lg font-semibold text-gray-800 mb-4">{product.price}</p> -->

<!-- Imagen principal con zoom al hacer hover -->
<!-- <div class="zoom-container mb-6">
    <img id="main-image" src={selectedImage} alt={product.name} class="w-full h-auto object-cover rounded-lg" />
  </div> -->

<!-- Galería de miniaturas -->
<!-- <div class="flex space-x-2 mb-4">
    {product.image.map((img, index) => (
      <img
        src={img}
        alt={`${product.name} ${index + 1}`}
        class={`w-16 h-16 object-cover rounded cursor-pointer border-2 border-transparent transition-transform hover:scale-105`}
        data-image={img}  /* Para almacenar el src en un atributo */
        onClick={() => selectedImage = img}  /* Evento personalizado de Astro */
      />
    ))}
  </div>
    <ColoresItem colors={product.colores} />
  </div>
</Layout> -->

<Layout
  title={`Veva Underwear - ${product.name} - Lencería Femenina`}
  description={`${product.name}`}
>
  <Breadcrumb {links} />
  <section class="py-8 bg-white md:py-16 dark:bg-gray-900 antialiased">
    <div class="max-w-screen-xl px-4 mx-auto 2xl:px-0">
      <div class="lg:grid lg:grid-cols-2 lg:gap-8 xl:gap-16">
        <div class="shrink-0 max-w-md lg:max-w-lg mx-auto">
          <!-- <img class="w-full" src={product.image[0]} alt={product.name} /> -->
          <!-- Imagen principal con zoom al hacer hover -->
          <div class="zoom-container mb-6">
            <img
              id="main-image"
              src={selectedImage}
              alt={product.name}
              class="w-full h-auto object-cover rounded-lg"
            />
          </div>
          <!-- Galería de miniaturas -->
          <div class="flex space-x-2 mb-4">
            {
              product.image.map((img, index) => (
                <img
                  src={img}
                  alt={`${product.name} ${index + 1}`}
                  class={`w-16 h-16 object-cover rounded cursor-pointer border-2 border-transparent transition-transform hover:scale-105`}
                  data-image={img}
                  onClick={() => (selectedImage = img)}
                />
              ))
            }
          </div>
        </div>

        <div class="mt-6 sm:mt-8 lg:mt-0">
          <h1
            class="text-xl font-semibold text-gray-900 sm:text-2xl dark:text-white"
          >
            {product.name} - Art. {product.art}
          </h1>
          <div class="mt-4 sm:items-center sm:gap-4 sm:flex">
            <p
              class="text-2xl font-extrabold text-gray-900 sm:text-3xl dark:text-white"
            >
              {product.price}
            </p>

            <div class="flex items-center gap-2 mt-2 sm:mt-0">
              <div class="flex items-center gap-1">
                <StarIcon />
                <StarIcon />
                <StarIcon />
                <StarIcon />
                <StarIcon />
              </div>
              <p
                class="text-sm font-medium leading-none text-gray-500 dark:text-gray-400"
              >
                (5.0)
              </p>
              <a
                href="#"
                class="text-sm font-medium leading-none text-gray-900 underline hover:no-underline dark:text-white"
              >
                345 Reviews
              </a>
            </div>
          </div>

          <div class="mt-6 sm:gap-4 sm:items-center sm:flex sm:mt-8">
            <a
              href="#"
              title=""
              class="flex items-center justify-center py-2.5 px-5 text-sm font-medium text-white focus:outline-none bg-lilac rounded-lg border border-lilac hover:text-primary-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"
              role="button"
            >
              <ShoppingCart />
              Comprar
            </a>
          </div>
          <hr class="my-6 md:my-8 border-gray-200 dark:border-gray-800" />
          <h3 class="text-base font-semibold text-gray-900">Colores:</h3>
          <ColoresItem colors={product.colores} />

          <p class="mb-6 mt-4 text-gray-500 dark:text-gray-400">
            {product.description}
          </p>
        </div>
      </div>
    </div>
  </section>
</Layout>

<!-- Script para manejar el cambio de imagen en cliente -->
<script>
  // Función para actualizar la imagen principal
  document.addEventListener("DOMContentLoaded", () => {
    const thumbnails = document.querySelectorAll("[data-image]");
    const mainImage = document.getElementById("main-image");

    thumbnails.forEach((thumbnail) => {
      thumbnail.addEventListener("click", () => {
        const newSrc = thumbnail.getAttribute("data-image");
        mainImage.src = newSrc;
      });
    });
  });
</script>

<!-- <h1>{product.name}</h1>
  <img src={product.image} alt={product.name} />
  <p>{product.description}</p>
  <p><strong>Precio:</strong> {product.price}</p>
  <a href="/">Volver a todos los productos</a> -->
